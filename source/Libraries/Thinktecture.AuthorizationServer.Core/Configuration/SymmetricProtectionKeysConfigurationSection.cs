//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18046
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Thinktecture.AuthorizationServer.Configuration
{


    /// <summary>
    /// The SymmetricProtectionKeysConfigurationSection Configuration Section.
    /// </summary>
    public partial class SymmetricProtectionKeysConfigurationSection : global::System.Configuration.ConfigurationSection
    {

        #region Singleton Instance
        /// <summary>
        /// The XML name of the SymmetricProtectionKeysConfigurationSection Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string SymmetricProtectionKeysConfigurationSectionSectionName = "symmetricProtectionKeys";

        /// <summary>
        /// Gets the SymmetricProtectionKeysConfigurationSection instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public static global::Thinktecture.AuthorizationServer.Configuration.SymmetricProtectionKeysConfigurationSection Instance
        {
            get
            {
                return ((global::Thinktecture.AuthorizationServer.Configuration.SymmetricProtectionKeysConfigurationSection)(global::System.Configuration.ConfigurationManager.GetSection(global::Thinktecture.AuthorizationServer.Configuration.SymmetricProtectionKeysConfigurationSection.SymmetricProtectionKeysConfigurationSectionSectionName)));
            }
        }
        #endregion

        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string XmlnsPropertyName = "xmlns";

        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Thinktecture.AuthorizationServer.Configuration.SymmetricProtectionKeysConfigurationSection.XmlnsPropertyName, IsRequired = false, IsKey = false, IsDefaultCollection = false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::Thinktecture.AuthorizationServer.Configuration.SymmetricProtectionKeysConfigurationSection.XmlnsPropertyName]));
            }
        }
        #endregion

        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion

        #region Confidentiality Property
        /// <summary>
        /// The XML name of the <see cref="Confidentiality"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string ConfidentialityPropertyName = "confidentiality";

        /// <summary>
        /// Gets or sets the Confidentiality.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Confidentiality.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Thinktecture.AuthorizationServer.Configuration.SymmetricProtectionKeysConfigurationSection.ConfidentialityPropertyName, IsRequired = true, IsKey = false, IsDefaultCollection = false)]
        public virtual string Confidentiality
        {
            get
            {
                return ((string)(base[global::Thinktecture.AuthorizationServer.Configuration.SymmetricProtectionKeysConfigurationSection.ConfidentialityPropertyName]));
            }
            set
            {
                base[global::Thinktecture.AuthorizationServer.Configuration.SymmetricProtectionKeysConfigurationSection.ConfidentialityPropertyName] = value;
            }
        }
        #endregion

        #region Integrity Property
        /// <summary>
        /// The XML name of the <see cref="Integrity"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string IntegrityPropertyName = "integrity";

        /// <summary>
        /// Gets or sets the Integrity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Integrity.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Thinktecture.AuthorizationServer.Configuration.SymmetricProtectionKeysConfigurationSection.IntegrityPropertyName, IsRequired = true, IsKey = false, IsDefaultCollection = false)]
        public virtual string Integrity
        {
            get
            {
                return ((string)(base[global::Thinktecture.AuthorizationServer.Configuration.SymmetricProtectionKeysConfigurationSection.IntegrityPropertyName]));
            }
            set
            {
                base[global::Thinktecture.AuthorizationServer.Configuration.SymmetricProtectionKeysConfigurationSection.IntegrityPropertyName] = value;
            }
        }
        #endregion
    }
}