@model Thinktecture.AuthorizationServer.Models.ValidatedRequest

@{
    ViewBag.Title = "Authorize";
}

<div class="row">
    <div class="span6 offset1">
        <p class="lead">
            <strong>@Model.Client.Name</strong> want to access <strong>@Model.Application.Name</strong> on your behalf.
        </p>
        <p>Choose from the following list the the permissions you want to grant:</p>
        
        @if (!this.ViewData.ModelState.IsValid)
        {
            var errors =
                from item in this.ViewData.ModelState.Values
                from e in item.Errors
                select e.ErrorMessage;
            <div class="alert alert-warning">
                <ul class="unstyled">
                    @foreach (var err in errors)
                    {
                        <li>@err</li>
                    }
                </ul>
            </div>
        }        

        @using (Html.BeginForm())
        {
             @Html.AntiForgeryToken()
            <dl>
                @foreach (var scope in @Model.Scopes.OrderByDescending(x=>x.Emphasize))
                {
                    <dt class="checkbox">
                        <label>
                            <input type="checkbox" checked name="scopes" value="@scope.Name" />
                            <strong>@scope.Name</strong>
                        @if (scope.Emphasize)
                        {
                            <i class="icon-exclamation-sign"></i>
                        }
                        </label>
                    </dt>
                    <dd>@scope.Description</dd>
                }
            </dl>

            <div>           
                <button class="btn btn-primary" name="button" value="yes">Allow</button>
                <button class="btn" name="button" value="no">Deny</button>
            </div>
        }
    </div>
    <div class="span4 offset1">
        <div class="hero-unit">
            <h3>@Model.Application.Name</h3>
            <p>@Model.Application.Description</p>
            @if(!String.IsNullOrWhiteSpace(Model.Application.LogoUrl))
            {
                <p class="span2"><img src="@Model.Application.LogoUrl" /></p>
            }
            <div class="clearfix"></div>
        </div>
    </div>
</div>
